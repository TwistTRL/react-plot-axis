{"version":3,"sources":["lib/DateXAxis.js","index.js"],"names":["DateXAxis","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","ref","React","createRef","_this$props","width","height","react_default","a","createElement","style","display","draw","_this$props2","minX","maxX","tickPosition","draw_memo","validFromDiff","validToDiff","rangeMinX","rangeMaxX","memo","diffX","_generateDateGrids","generateDateGrids","grids","gridLabels","getGridLabels","startIndex","Math","max","bisect_right","endIndex","min","length","bisect_left","domXs","slice","map","x","toDomXCoord_Linear","ctx","current","getContext","clearRect","textPlot","ticPlot","labels","t","Date","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","grid","value","setTime","push","getMeaningfulDateField","err","return","d","getMilliseconds","getSeconds","getMinutes","getHours","getDate","getMonth","format","texts","textAlign","textBaseline","i","text","round","y","fillText","beginPath","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","moveTo","lineTo","stroke","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","PureComponent","App","state","_this2","_this$state","react","type","step","onChange","ev","setState","Number","parseInt","target","lib_DateXAxis","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bca43c66.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from \"proptypes\";\n\nimport {bisect_left, bisect_right} from \"bisect\";\nimport {toDomXCoord_Linear,generateDateGrids} from \"plot-utils\";\nimport {format} from \"date-fns\";\n\nclass DateXAxis extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.ref= React.createRef();\n  }\n  \n  render() {\n    let { width,height} = this.props;\n    return (\n      <canvas ref={this.ref}  width={width} height={height}\n                              style={{width:width,height:height,display:\"block\"}}\n                              >\n      </canvas>\n    );\n  }\n\n  componentDidMount(){\n    this.draw();\n  }\n  \n  componentDidUpdate() {\n    this.draw();\n  }\n\n  draw() {\n    let { minX,maxX,\n          width,height,\n          tickPosition} = this.props;\n    this.draw_memo = this.draw_memo || {validFromDiff:0,validToDiff:-1,rangeMinX:0,rangeMaxX:-1};\n    let memo = this.draw_memo;\n    let diffX = maxX-minX;\n    // Generate grids, labels and bitmaps in cache\n    if (memo.validFromDiff>diffX ||\n        diffX>memo.validToDiff ||\n        memo.rangeMinX>minX ||\n        maxX>memo.rangeMaxX\n        ) {\n      memo.rangeMinX = minX-10*diffX;\n      memo.rangeMaxX = maxX+10*diffX;\n      let {grids, validFromDiff, validToDiff} = generateDateGrids(minX,maxX,memo.rangeMinX,memo.rangeMaxX);\n      memo.validFromDiff = validFromDiff;\n      memo.validToDiff = validToDiff;\n      memo.grids = grids;\n      memo.gridLabels = this.getGridLabels(grids);\n    }\n    // Filter\n    let startIndex = Math.max(0,bisect_right(memo.grids,minX));\n    let endIndex = Math.min(memo.grids.length-1,bisect_left(memo.grids,maxX));\n    \n    let domXs = memo.grids.slice(startIndex,endIndex+1).map( (x)=>toDomXCoord_Linear(width,minX,maxX,x));\n    let gridLabels = memo.gridLabels.slice(startIndex,endIndex+1);\n    // Plot\n    let canvas = this.ref.current;\n    let ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0,0,width,height);\n    this.textPlot(ctx,width,height,domXs,gridLabels);\n    this.ticPlot(ctx,width,height,domXs,tickPosition);\n  }\n  \n  getGridLabels(grids){\n    let labels = [];\n    let t = new Date();\n    for (let grid of grids) {\n      t.setTime(grid);\n      labels.push(this.getMeaningfulDateField(t));\n    }\n    return labels;\n  }\n  \n  getMeaningfulDateField(d){\n    if (d.getMilliseconds()===0) {\n      if (d.getSeconds()===0) {\n        if (d.getMinutes()===0){\n          if (d.getHours()===0){\n            if (d.getDate()===1) {\n              if (d.getMonth()===0) {\n                return format(d,\"YYYY\");\n              }\n              return format(d,\"MMM\");\n            }\n            return format(d,\"Do\");\n          }\n          return format(d,\"HH:00\");\n        }\n        return format(d,\"HH:mm\");\n      }\n      return format(d,\"HH:mm:ss\");\n    }\n    return format(d,\"ss.SSS\");\n  }\n\n  textPlot(ctx,width,height,domXs,texts){\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    for (let i=0; i<domXs.length; i++) {\n      let text = texts[i];\n      let x = Math.round(domXs[i]);\n      let y = Math.round(height/2);\n      ctx.fillText(text,x,y);\n    }\n  }\n  \n  ticPlot(ctx,width,height,domXs,tickPosition){\n    let y;\n    switch (tickPosition) {\n      case \"top\":\n      default:\n        ctx.beginPath();\n        y = Math.round(height*0.1);\n        for (let x of domXs){\n          ctx.moveTo(Math.round(x)+0.5,0);\n          ctx.lineTo(Math.round(x)+0.5,y);\n        }\n        ctx.moveTo(0,0.5);\n        ctx.lineTo(width,0.5);\n        ctx.stroke();\n        break;\n      case \"bottom\":\n        ctx.beginPath();\n        y = Math.round(height*0.9);\n        for (let x of domXs){\n          ctx.moveTo(Math.round(x)+0.5,y);\n          ctx.lineTo(Math.round(x)+0.5,height);\n        }\n        ctx.moveTo(0,height-0.5);\n        ctx.lineTo(width,height-0.5);\n        ctx.stroke();\n        break;\n    }\n  }\n}\n\nDateXAxis.propTypes = {\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  tickPosition: PropTypes.string.isRequired,\n}\n\nexport default DateXAxis;\n","import React, {Component, Fragment} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {DateXAxis} from \"./lib\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {width: 1000,\n                  height: 50,\n                  minX: 0,\n                  maxX: 100000000000\n                  };\n  }\n\n  render() {\n    let {width,height,minX,maxX} = this.state;\n    return (\n      <Fragment>\n        <div>\n          width:\n          <input  type=\"range\" min={800} max={1600} step={1}\n                  value={width}\n                  onChange={(ev)=>this.setState({width:Number.parseInt(ev.target.value)})}/>\n        </div>\n        <div>\n          height:\n          <input  type=\"range\" min={50} max={100} step={1}\n                  value={height}\n                  onChange={(ev)=>this.setState({height:Number.parseInt(ev.target.value)})}/>\n        </div>\n        <div>\n          minX:\n          <input  type=\"range\" min={-100000000000} max={maxX} step={1}\n                  value={minX}\n                  onChange={(ev)=>this.setState({minX:Number.parseInt(ev.target.value)})}/>\n        </div>\n        <div>\n          maxX:\n          <input  type=\"range\" min={minX} max={100000000000} step={1}\n                  value={maxX}\n                  onChange={(ev)=>this.setState({maxX:Number.parseInt(ev.target.value)})}/>\n        </div>\n        <div></div>\n        <div></div>\n        <DateXAxis  width={width} height={height}\n                    minX={minX} maxX={maxX}\n                    />\n      </Fragment>\n    );\n  }\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}